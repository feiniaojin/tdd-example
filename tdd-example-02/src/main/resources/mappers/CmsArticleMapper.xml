<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feiniaojin.tdd.example.mapper.CmsArticleMapper">
  <resultMap id="BaseResultMap" type="com.feiniaojin.tdd.example.model.CmsArticle">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="publish_state" jdbcType="INTEGER" property="publishState" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="modified_by" jdbcType="VARCHAR" property="modifiedBy" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cms_article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.feiniaojin.tdd.example.model.CmsArticle">
    insert into cms_article (id, article_id, title, 
      publish_state, deleted, created_by, 
      created_time, modified_by, modified_time, 
      version, content)
    values (#{id,jdbcType=BIGINT}, #{articleId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{publishState,jdbcType=INTEGER}, #{deleted,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=VARCHAR}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.feiniaojin.tdd.example.model.CmsArticle">
    update cms_article
    set article_id = #{articleId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      publish_state = #{publishState,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=VARCHAR},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, article_id, title, publish_state, deleted, created_by, created_time, modified_by, 
    modified_time, version, content
    from cms_article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, article_id, title, publish_state, deleted, created_by, created_time, modified_by, 
    modified_time, version, content
    from cms_article
  </select>
</mapper>